name: flutter-integration Flow
run-name: flutter-integration Run
on: [push]

env:
  flutter_version: '3.16.4'

jobs:

  flutter_integration_test:
    runs-on: macos-latest
    timeout-minutes: 20
    strategy:
      matrix:
        include:
          - api-level: 31
            arch: x86_64
    steps:
      - uses: actions/checkout@v4

      - name: 'Set up Flutter environment'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.4'
          channel: 'stable'
          cache: true

      # --------- Android ---------
      # flutter キャッシュ
      - name: 'Flutter packages cache'
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: pubspec-hash-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: 'pubspec-hash-'

      - run: |
          flutter pub get

      - name: "Start Android Sequence"
        run: |
          echo "start!"

      - name: "setup java"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: "gradle build action"
        uses: gradle/gradle-build-action@v2

      - name: "AVD cache"
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-cache-${{ matrix.api-level }}-${{ matrix.arch }}

      - name: "create ADV and generate snapshot for caching"
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          disable-animations: false
          script: |
            echo "Generated AVD snapshot for cache"

      - name: "Integration Test !"
        timeout-minutes: 12
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          disable-animations: false
          script: |
            echo "---- @@ 1 ----"
            flutter test integration_test -d "emulator-5554"
            echo "---- @@ 2 ----"

      # --------- iOS ---------

      # flutter キャッシュ
      - name: 'Flutter packages cache'
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FLUTTER_HOME }}/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: pubspec-hash-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: 'pubspec-hash-'

      - run: |
          flutter pub get --verbose

      - name: Get iPhone SE 3rd generation Simulator UUID
        run: |
          echo "start!"
      - name: "Get UUID"
        run: |
          echo "---- @@ 1 ----"
          UUID=$(xcrun xctrace list devices | grep "iPhone SE (3rd generation) Simulator" | awk -F '[()]' '{ print $6 }')
          echo "---- @@ 2 ----"
          echo "UUID->$UUID"
          xcrun simctl boot $UUID
          echo "---- @@ 3 ----"
          xcrun simctl bootstatus $UUID
          echo "---- @@ 4 1----"
          sleep 10
          echo "---- @@ 4 2----"
          flutter test integration_test -d $UUID
          echo "---- @@ 5 ----"
          echo "Finish!"